circuit YEMU :
  module YEMU :
    input clock : Clock
    input reset : UInt<1>
    output io : { halt : UInt<1>}

    cmem R : UInt<64> [32] @[Yemu.scala 6:14]
    reg PC : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[Yemu.scala 7:19]
    cmem M : UInt<32> [256] @[Yemu.scala 8:14]
    node _T = bits(PC, 63, 2) @[Yemu.scala 20:18]
    node _T_1 = bits(_T, 7, 0) @[Yemu.scala 20:15]
    infer mport MPORT = M[_T_1], clock @[Yemu.scala 20:15]
    wire inst : { imm11_0 : UInt<12>, rs1 : UInt<5>, funct3 : UInt<3>, rd : UInt<5>, opcode : UInt<7>} @[Yemu.scala 20:35]
    wire _WIRE : UInt<32>
    _WIRE <= MPORT
    node _T_2 = bits(_WIRE, 6, 0) @[Yemu.scala 20:35]
    inst.opcode <= _T_2 @[Yemu.scala 20:35]
    node _T_3 = bits(_WIRE, 11, 7) @[Yemu.scala 20:35]
    inst.rd <= _T_3 @[Yemu.scala 20:35]
    node _T_4 = bits(_WIRE, 14, 12) @[Yemu.scala 20:35]
    inst.funct3 <= _T_4 @[Yemu.scala 20:35]
    node _T_5 = bits(_WIRE, 19, 15) @[Yemu.scala 20:35]
    inst.rs1 <= _T_5 @[Yemu.scala 20:35]
    node _T_6 = bits(_WIRE, 31, 20) @[Yemu.scala 20:35]
    inst.imm11_0 <= _T_6 @[Yemu.scala 20:35]
    node _T_7 = eq(inst.opcode, UInt<5>("h13")) @[Yemu.scala 21:29]
    node _T_8 = eq(inst.funct3, UInt<1>("h0")) @[Yemu.scala 21:63]
    node isAddi = and(_T_7, _T_8) @[Yemu.scala 21:47]
    node lo = cat(inst.rd, inst.opcode) @[Yemu.scala 22:23]
    node hi_hi = cat(inst.imm11_0, inst.rs1) @[Yemu.scala 22:23]
    node hi = cat(hi_hi, inst.funct3) @[Yemu.scala 22:23]
    node _T_9 = cat(hi, lo) @[Yemu.scala 22:23]
    node isEbreak = eq(_T_9, UInt<21>("h100073")) @[Yemu.scala 22:30]
    node _T_10 = or(isAddi, isEbreak) @[Yemu.scala 23:17]
    node lo_1 = cat(inst.rd, inst.opcode) @[Yemu.scala 23:63]
    node hi_hi_1 = cat(inst.imm11_0, inst.rs1) @[Yemu.scala 23:63]
    node hi_1 = cat(hi_hi_1, inst.funct3) @[Yemu.scala 23:63]
    node _T_11 = cat(hi_1, lo_1) @[Yemu.scala 23:63]
    node _T_12 = bits(reset, 0, 0) @[Yemu.scala 23:9]
    node _T_13 = or(_T_10, _T_12) @[Yemu.scala 23:9]
    node _T_14 = eq(_T_13, UInt<1>("h0")) @[Yemu.scala 23:9]
    when _T_14 : @[Yemu.scala 23:9]
      printf(clock, UInt<1>("h1"), "Assertion failed: Invalid instruction 0x%x\n    at Yemu.scala:23 assert(isAddi || isEbreak, \"Invalid instruction 0x%%x\", inst.asUInt)\n", _T_11) : SIM @[Yemu.scala 23:9]
      stop(clock, UInt<1>("h1"), 1) @[Yemu.scala 23:9]
    node _T_15 = mux(isEbreak, UInt<5>("ha"), inst.rs1) @[Yemu.scala 25:25]
    node _T_16 = eq(_T_15, UInt<1>("h0")) @[Yemu.scala 9:34]
    infer mport MPORT_1 = R[_T_15], clock @[Yemu.scala 9:55]
    node rs1Val = mux(_T_16, UInt<64>("h0"), MPORT_1) @[Yemu.scala 9:29]
    node _T_17 = mux(isEbreak, UInt<5>("hb"), UInt<5>("h0")) @[Yemu.scala 26:25]
    node _T_18 = eq(_T_17, UInt<1>("h0")) @[Yemu.scala 9:34]
    infer mport MPORT_2 = R[_T_17], clock @[Yemu.scala 9:55]
    node rs2Val = mux(_T_18, UInt<64>("h0"), MPORT_2) @[Yemu.scala 9:29]
    when isAddi : @[Yemu.scala 27:16]
      infer mport MPORT_3 = R[inst.rd], clock @[Yemu.scala 27:19]
      node _T_19 = bits(inst.imm11_0, 11, 11) @[Yemu.scala 18:52]
      node _T_20 = bits(_T_19, 0, 0) @[Bitwise.scala 72:15]
      node _T_21 = mux(_T_20, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 72:12]
      node _T_22 = cat(_T_21, inst.imm11_0) @[Cat.scala 30:58]
      node _T_23 = add(rs1Val, _T_22) @[Yemu.scala 27:39]
      node _T_24 = tail(_T_23, 1) @[Yemu.scala 27:39]
      MPORT_3 <= _T_24 @[Yemu.scala 27:29]
    node _T_25 = eq(rs1Val, UInt<1>("h0")) @[Yemu.scala 28:28]
    node _T_26 = and(isEbreak, _T_25) @[Yemu.scala 28:17]
    when _T_26 : @[Yemu.scala 28:38]
      node _T_27 = bits(rs2Val, 7, 0) @[Yemu.scala 28:59]
      node _T_28 = bits(reset, 0, 0) @[Yemu.scala 28:46]
      node _T_29 = eq(_T_28, UInt<1>("h0")) @[Yemu.scala 28:46]
      when _T_29 : @[Yemu.scala 28:46]
        printf(clock, UInt<1>("h1"), "%c", _T_27) : SIM_1 @[Yemu.scala 28:46]
    node _T_30 = eq(rs1Val, UInt<1>("h1")) @[Yemu.scala 29:34]
    node _T_31 = and(isEbreak, _T_30) @[Yemu.scala 29:23]
    io.halt <= _T_31 @[Yemu.scala 29:11]
    node _T_32 = add(PC, UInt<3>("h4")) @[Yemu.scala 30:12]
    node _T_33 = tail(_T_32, 1) @[Yemu.scala 30:12]
    PC <= _T_33 @[Yemu.scala 30:6]

